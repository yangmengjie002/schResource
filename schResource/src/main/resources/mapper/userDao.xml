<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="sch.com.dao.yang.UserDao">
 	<select id="getUser" resultType="sch.com.entity.User" parameterType="java.lang.String">
 		select user_id userId,user_name userName,user_pwd userPwd,user_real_name userRealName,major_id majorId,user_status userStatus from tb_user where user_name = #{username}
 	</select>
 	<select id="getUserInfo" resultType="sch.com.entity.User" parameterType="sch.com.entity.User">
 		select user_id userId,user_name userName,user_pwd userPwd,user_real_name userRealName,major_id majorId,user_status userStatus from tb_user where user_name = #{userName} and user_pwd = #{userPwd}
 	</select>
 	<!-- 根据条件查询用户信息 -->
 	<select id="selectAllUser" resultType="map" parameterType="sch.com.entity.UserPage">
 		select * from (select rownum r,t.* from user_info t) u where r > #{startIndex} and r &lt; #{endIndex}
 			<if test="userName!=null">
 				and u.user_name like '%${userName}%'
 			</if>
 			<if test="roleId!=null">
 				and u.role_id = #{roleId}
 			</if>
 			<if test="instituteId!=null">
 				and u.role_id = #{instituteId}
 			</if>
 			<if test="majorId!=null">
 				and u.role_id = #{majorId}
 			</if>
 	</select>
 	<!-- 根据条件查询数据记录 -->
 	<select id="getCount" resultType="int">
 		select count(*) from user_info 
 		where 1=1
 			<if test="userName!=null">
 				and user_name like '%${userName}%'
 			</if>
 			<if test="roleId!=null">
 				and role_id = #{roleId}
 			</if>
 			<if test="instituteId!=null">
 				and role_id = #{instituteId}
 			</if>
 			<if test="majorId!=null">
 				and role_id = #{majorId}
 			</if>
 	</select>
 	<!-- 禁用用户 -->
 	<update id="deleteUser">
 		update tb_user set user_status = 2 where user_id = #{userId}
 	</update>
 	<!-- 启用用户 -->
 	<update id="upUser">
 		update tb_user set user_status = 1 where user_id = #{userId}
 	</update>
 	<!-- 插入用户 -->
 	<insert id="insertUser">
 		insert into tb_user values(seq_course.nextval,#{userName},#{userPwd},#{userRealName},#{majorId},1)
 	</insert>
 	<!-- 修改用户 -->
 	<insert id="updateUser" useGeneratedKeys="false" parameterType="sch.com.entity.User">
 		update tb_user set user_name = #{userName},user_real_name = #{userRealName},major_id = #{majorId} where user_id = #{userId}
 	</insert>
 	<!-- 插入用户角色表 -->
 	<insert id="insertUserRole">
 		insert into tb_user_role values(seq_course.currval,#{roleId})
 	</insert>
 	<!-- 根据用户ID插入用户角色表 -->
 	<insert id="insertUserRoleByMap" parameterType="map">
 		insert into tb_user_role values(#{userId},#{roleId})
 	</insert>
 	<!-- 根据用户ID删除其角色 -->
 	<delete id="deleteUserRole">
 		delete from tb_user_role where user_id = #{userId}
 	</delete>
 	<!-- 根据用户ID修改密码 -->
 	<update id="updatePwd" parameterType="map">
 		update tb_user set user_pwd = #{pwd} where user_id = #{userId}
 	</update>
 	<!-- 根据用户ID查找上传信息 -->
 	<select id="getUploadByUserId" resultType="map">
 		select * from tb_resource_upload where user_id = #{userId}
 	</select>
 	<!-- 根据用户ID查找下载信息 -->
 	<select id="getDownloadByUserId" resultType="map">
 		select ru.resource_type_id resourceId,ru.status_id statusId,ru.resource_name resourceName,ru.resource_info resourceInfo,d.download_id,d.user_id,d.download_date from tb_resource_download d,tb_resource_upload ru where d.resource_id = ru.resource_id and d.user_id = #{userId}
 	</select>
 </mapper>