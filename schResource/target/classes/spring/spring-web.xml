<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<!-- 配置SpringMVC -->
	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置： (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 -->
	<mvc:annotation-driven />

	<!-- 2.静态资源默认servlet配置 (1)加入对静态资源的处理：js,gif,png (2)允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />
	

	<!-- 3.配置jsp 显示ViewResolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="2097152000" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="resolveLazily" value="true" />
	</bean> -->
	<bean id="multipartResolver" class="sch.com.web.yang.CommonsMultipartResolverExt"> 
    <property name="defaultEncoding" value="UTF-8" />  
    <property name="maxUploadSize" value="2000000000000" /> 
</bean>  
	

	<!-- 配置一个工厂bean用于创建shiro用到的过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 注入登录页面 -->
		<property name="loginUrl" value="/login.jsp"></property>
		<!-- 注入成功页面 -->
		<property name="successUrl" value="/success.jsp"></property>
		<!-- 注入错误页面 -->
		<property name="unauthorizedUrl" value="/unauthorizedUrl.jsp"></property>

	
		<!-- 注入url拦截规则 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- /page_base_stuff.aciton=perms[staff] staff为数据库中的关键字，即此路径必须具有此权限 -->
				<!-- /css/** = anon /js/** = anon /login.jsp = anon -->
				<!-- /js/** = anon /login.jsp* = anon /user/getUser.do = anon -->
				/login.jsp = anon
				/user/getUser.do = anon
				/queryInformation.do = anon
				/js/** = anon
				/user/login.do = anon
				/jsp/admin/home.jsp = perms[home]
				/jsp/admin/user.jsp = perms[user]
				/jsp/admin/role.jsp = perms[role]
				/jsp/admin/function.jsp = perms[function]
				/jsp/admin/resourceType.jsp = perms[school]
				/jsp/admin/instituteMj.jsp = perms[schoo]
				/jsp/admin/teacherStyle.jsp = perms[teacherStyle]
				/jsp/admin/InformationManage.jsp = perms[InformationManage]
				/jsp/admin/infoList.jsp = perms[cha]
				/jsp/admin/HuiFuList.jsp = perms[huifu]
				/jsp/admin/endList.jsp = perms[endlist]
				/jsp/admin/releaseList.jsp = perms[releaselist]
				/jsp/admin/checkList.jsp = perms[resourceCheck]
				/admin/* = authc
				/* = anon
			</value>
		</property>
	</bean>
	<!-- 注册自定义的realm -->
	<bean id="Realm" class="sch.com.web.yang.BosRealm"></bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 配置安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注入自定义realm -->
		<property name="realm" ref="Realm" />
		<!-- 注入缓存管理器 -->
		<!-- <property name="cacheManager" ref="cacheManager"/> -->
	</bean>
	
	<!-- 注册缓存管理器 -->
	<!-- <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		注入ehcache配置文件
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
	</bean> -->
	
	
	<!--启用Shiro相关的注解 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 4.扫描web相关的bean -->
	<context:component-scan base-package="sch.com.web"/>

</beans>
